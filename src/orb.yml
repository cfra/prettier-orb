version: 2.1

description: |
  Check and/or fix formatting of source code using prettier.
  Source can be found at https://github.com/PicturePipe/prettier-orb/

examples:
  check:
    description: &check-description >
      Check formatting of source code using prettier. If your project does not contain a
      .prettierrc.json, a default style will be used.
    usage:
      version: 2.1

      orbs:
        prettier: picturepipe/prettier@volatile

      workflows:
        build:
          jobs:
            - prettier/check
  write-commit-push:
    description: &write-commit-push-description >
      Run prettier write and push new formatting of source code back to repository. If your project
      does not contain a .prettierrc.json, a default style will be used.
    usage:
      version: 2.1

      orbs:
        prettier: picturepipe/prettier@volatile

      workflows:
        build:
          jobs:
            - prettier/write-commit-push

executors:
  default:
    description: >
      The docker image to use for running prettier tasks.
    docker:
      - image: quay.io/picturepipe/prettier:latest

commands:
  setup:
    description: >
      Put standard .prettierrc.json if none is present
    steps:
      - run:
          name: Put default .prettierrc.json if needed
          # The following syntax only works with tabs.
          command: |
            if [ ! -e ".prettierrc.json" ]; then
            	cat > .prettierrc.json \<<-'EOF'
            		{
            		  "printWidth": 99,
            		  "proseWrap": "always"
            		}
            	EOF
            fi
  commit-push:
    description: >
      Perform a git commit and push it back upstream
    parameters:
      remote-url: &remote-url-parameter
        description: >
          Specify if the push should be made to a remote other than origin.
        type: string
        default: ""
    steps:
      - run:
          name: Configure git, commit changes and push them upstream
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"
            if [ -z "<< parameters.remote-url>>" ]; then
                REMOTE_URL="$(git remote get-url origin)"
            else
                REMOTE_URL="<< parameters.remote-url >>"
            fi
            if [ -n "$(git status --porcelain)" ]; then
                git commit --all --message "Format code with Prettier"
                git push "$REMOTE_URL" "HEAD:${CIRCLE_BRANCH}"
                # Indicate failure if we needed to fix formatting
                exit 1
            else
                echo "No changes to commit."
            fi

jobs:
  check:
    description: *check-description
    executor: default
    parameters:
      arguments:
        description: >
          Arguments to pass to prettier.
        type: string
        default: "'./**'"
    steps:
      - checkout
      - setup
      - run:
          name: Prettier Check
          command: prettier --check <<parameters.arguments>>
  write-commit-push:
    description: *write-commit-push-description
    executor: default
    parameters:
      arguments:
        description: >
          Arguments to pass to prettier.
        type: string
        default: "'./**'"
      remote-url:
        <<: *remote-url-parameter
    steps:
      - checkout
      - setup
      - run:
          name: Prettier Write
          command: prettier --write <<parameters.arguments>>
      - commit-push:
          remote-url: "<< parameters.remote-url >>"
